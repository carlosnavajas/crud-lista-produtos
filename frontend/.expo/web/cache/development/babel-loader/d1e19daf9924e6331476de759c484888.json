{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Marcos\\\\Projetos\\\\prj2CarlosNavajas\\\\frontend\\\\AppForm.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { RadioButton } from 'react-native-paper';\nimport DatePicker from 'react-native-datepicker';\nimport axios from 'axios';\nexport default function AppForm(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params ? route.params.id : undefined;\n\n  var _React$useState = React.useState('mp'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tipo_produto = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      data_entrega = _useState2[0],\n      setDataEntrega = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      produto = _useState4[0],\n      setProduto = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quantidade = _useState6[0],\n      setQuantidade = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      valor = _useState8[0],\n      setValorProduto = _useState8[1];\n\n  useEffect(function () {\n    if (!route.params) return;\n    setValue(route.params.tipo_produto);\n    console.log(route.params.produto);\n    setDataEntrega(route.params.data_entrega);\n    setProduto(route.params.produto);\n    setQuantidade(route.params.quantidade);\n    setValorProduto(route.params.valor_produto);\n  }, [route]);\n\n  function handleProductChange(produto) {\n    setProduto(produto);\n  }\n\n  function handleProductValueChange(valor_produto) {\n    setValorProduto(valor_produto);\n  }\n\n  function handleQuantityChange(quantidade) {\n    setQuantidade(quantidade);\n  }\n\n  function handleButtonPress() {\n    axios.post('http://192.168.0.19:3001/api/v1/produtos', {\n      produto: produto,\n      tipo_produto: tipo_produto,\n      valor: valor,\n      quantidade: quantidade,\n      data_entrega: data_entrega\n    }).then(function (response) {\n      alert('Cadastro realizado com sucesso!');\n      navigation.navigate(\"AppList\");\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Adicionar Produto\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleProductChange,\n    placeholder: \"Nome do Produto\",\n    clearButtonMode: \"always\",\n    value: produto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Tipo do Produto\"), React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(value) {\n      return setValue(value);\n    },\n    value: tipo_produto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(RadioButton.Item, {\n    label: \"Mat\\xE9ria Prima\",\n    value: \"mp\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(RadioButton.Item, {\n    label: \"Produto Acabado\",\n    value: \"pa\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(RadioButton.Item, {\n    label: \"Embalagem\",\n    value: \"emb\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleProductValueChange,\n    placeholder: \"Valor do Produto\",\n    clearButtonMode: \"always\",\n    value: valor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleQuantityChange,\n    placeholder: \"Digite a quantidade\",\n    keyboardType: 'numeric',\n    clearButtonMode: \"always\",\n    value: quantidade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Data de Entrega\"), React.createElement(DatePicker, {\n    date: data_entrega,\n    onDateChange: setDataEntrega,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Salvar\"))), React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#D93600',\n    alignItems: 'center'\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 50\n  },\n  inputContainer: {\n    flex: 1,\n    marginTop: 30,\n    width: '90%',\n    padding: 20,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    alignItems: 'stretch',\n    backgroundColor: '#fff'\n  },\n  input: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'stretch'\n  },\n  button: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: 'blue',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 20,\n    shadowOpacity: 20,\n    shadowColor: '#ccc'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/Marcos/Projetos/prj2CarlosNavajas/frontend/AppForm.js"],"names":["StatusBar","React","useState","useEffect","RadioButton","DatePicker","axios","AppForm","route","navigation","id","params","undefined","tipo_produto","setValue","Date","data_entrega","setDataEntrega","produto","setProduto","quantidade","setQuantidade","valor","setValorProduto","console","log","valor_produto","handleProductChange","handleProductValueChange","handleQuantityChange","handleButtonPress","post","then","response","alert","navigate","styles","container","title","inputContainer","input","value","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","color","fontSize","fontWeight","marginTop","width","padding","borderTopLeftRadius","borderTopRightRadius","height","borderRadius","paddingHorizontal","justifyContent","elevation","shadowOpacity","shadowColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { RadioButton } from 'react-native-paper';\r\nimport DatePicker from 'react-native-datepicker';\r\nimport axios from 'axios';\r\n\r\nexport default function AppForm({ route, navigation }) {\r\n\r\n  const id = route.params ? route.params.id : undefined;\r\n  const [tipo_produto, setValue] = React.useState('mp');\r\n  const [data_entrega, setDataEntrega] = useState(new Date());\r\n  const [produto, setProduto] = useState(''); \r\n  const [quantidade, setQuantidade] = useState('');  \r\n  const [valor, setValorProduto] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(!route.params) return;\r\n    setValue(route.params.tipo_produto);\r\n    console.log(route.params.produto);\r\n    setDataEntrega(route.params.data_entrega);\r\n    setProduto(route.params.produto);\r\n    setQuantidade(route.params.quantidade);\r\n    setValorProduto(route.params.valor_produto);\r\n  }, [route])\r\n\r\n\r\n  function handleProductChange(produto){ setProduto(produto); } \r\n  function handleProductValueChange(valor_produto){ setValorProduto(valor_produto); } \r\n  function handleQuantityChange(quantidade){ setQuantidade(quantidade); }\r\n  \r\n  function handleButtonPress(){ \r\n    axios.post('http://192.168.0.19:3001/api/v1/produtos', {produto, tipo_produto, valor, quantidade, data_entrega}).then(response => {\r\n        alert('Cadastro realizado com sucesso!');\r\n        navigation.navigate(\"AppList\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Adicionar Produto</Text>\r\n      <View style={styles.inputContainer}> \r\n        <TextInput \r\n          style={styles.input}\r\n          onChangeText={handleProductChange} \r\n          placeholder=\"Nome do Produto\"\r\n          clearButtonMode=\"always\"\r\n          value={produto} /> \r\n\r\n        <Text>Tipo do Produto</Text>\r\n        <RadioButton.Group onValueChange={value => setValue(value)} value={tipo_produto}>\r\n          <RadioButton.Item label=\"Matéria Prima\" value=\"mp\" color=\"red\" />\r\n          <RadioButton.Item label=\"Produto Acabado\" value=\"pa\" color=\"red\" />\r\n          <RadioButton.Item label=\"Embalagem\" value=\"emb\" color=\"red\" />\r\n        </RadioButton.Group>\r\n\r\n        <TextInput \r\n          style={styles.input} \r\n          onChangeText={handleProductValueChange} \r\n          placeholder=\"Valor do Produto\"\r\n          clearButtonMode=\"always\"\r\n          value={valor} />\r\n        \r\n        <TextInput \r\n          style={styles.input} \r\n          onChangeText={handleQuantityChange}  \r\n          placeholder=\"Digite a quantidade\" \r\n          keyboardType={'numeric'}\r\n          clearButtonMode=\"always\"\r\n          value={quantidade} /> \r\n        \r\n        <Text>Data de Entrega</Text>\r\n        <DatePicker\r\n          date={data_entrega}\r\n          onDateChange={setDataEntrega}\r\n        />\r\n\r\n        <TouchableOpacity style={styles.button} onPress={handleButtonPress}> \r\n          <Text style={styles.buttonText}>Salvar</Text> \r\n        </TouchableOpacity> \r\n      </View>\r\n      <StatusBar style=\"light\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#D93600',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginTop: 50,\r\n  },\r\n  inputContainer: {\r\n    flex: 1,\r\n    marginTop: 30,\r\n    width: '90%',\r\n    padding: 20,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    alignItems: 'stretch',\r\n    backgroundColor: '#fff'\r\n  },\r\n  input: {\r\n    marginTop: 10,\r\n    height: 60,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 24,\r\n    fontSize: 16,\r\n    alignItems: 'stretch'\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    height: 60,\r\n    backgroundColor: 'blue',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 24,\r\n    fontSize: 16,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    elevation: 20,\r\n    shadowOpacity: 20,\r\n    shadowColor: '#ccc',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}